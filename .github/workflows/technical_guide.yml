name: Deploy mdBook site to Pages
on:
  push:
    branches: ["main"]
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.36
    steps:
      - uses: actions/checkout@v4
      
      - name: Install mdBook
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- -y
          source "$HOME/.cargo/env"
          cargo install mdbook --version ${MDBOOK_VERSION}

      - name: Setup mdBook structure
        run: |
          # Create src directory if it doesn't exist
          mkdir -p src
          
          # Debug - list directories to see actual structure
          echo "Current directory structure:"
          find . -type f -name "*.md" | sort
          
          # Copy entire Technical_Documentation directory to src
          cp -r Technical_Documentation src/
          
          # Copy README.md to src directory
          if [ -f README.md ]; then
            cp README.md src/
          else
            # Create a default README.md if it doesn't exist
            echo -e "# Technical Documentation\n\nWelcome to the Technical Documentation for the DataCycle Project." > src/README.md
          fi
          
          # Create a new SUMMARY.md for src directory that references the correct paths
          cat > src/SUMMARY.md << 'EOL'
          # Summary
          
          [Introduction](README.md)
          
          ## Overview
          - [ETL Overview](Technical_Documentation/ETL-Process-Flow.md)
          
          ## Database Documentation
          - [DB System Overview](Technical_Documentation/DB-System-Overview.md)
          - [DB ETL Process](Technical_Documentation/database%20documentation/DB-ETL-Process.md)
          - [DB Import Setup Guide](Technical_Documentation/database%20documentation/DB-Import-Setup-Guide.md)
          - [DB SQL Server Agent Jobs](Technical_Documentation/database%20documentation/DB-SQL-Server-Agent-Jobs.md)
          - [DB Schema](Technical_Documentation/database%20documentation/DB-Schema.md)
          - [DB Stored Procedures](Technical_Documentation/database%20documentation/DB-Stored-Procedures.md)
          
          ## Data Warehouse Documentation
          - [DW System Overview](Technical_Documentation/DW-System-Overview.md)
          - [DW Dimension Tables](Technical_Documentation/datawarehouse%20documentation/DW-Dimension-Tables.md)
          - [DW Fact Tables](Technical_Documentation/datawarehouse%20documentation/DW-Fact-Tables.md)
          - [DW Schema](Technical_Documentation/datawarehouse%20documentation/DW-Schema.md)
          - [DW Stored Procedures](Technical_Documentation/datawarehouse%20documentation/DW-Stored-Procedures.md)
          
          ## KNIME Documentation
          - [Knime Workflows](Technical_Documentation/knime%20documentation/KNIME%20workflows.md)
          
          ## GitHub Actions
          - [GitHub Actions Workflows](Technical_Documentation/Github-Actions-workflows.md)
          EOL
          
          # Check and populate empty files with content
          check_and_populate() {
            file="$1"
            title="$2"
            
            # Skip if file doesn't exist
            if [ ! -f "$file" ]; then
              echo "File not found: $file"
              return
            fi
            
            # Check if file is empty or very small
            size=$(wc -c < "$file")
            if [ $size -lt 10 ]; then
              echo "File is empty or too small, creating content for: $file"
              echo -e "# $title\n\nThis documentation is under development." > "$file"
            fi
            
            echo "File content for $file:"
            head -n 3 "$file"
          }
          
          # Check and populate all files referenced in SUMMARY.md
          check_and_populate "src/Technical_Documentation/ETL-Process-Flow.md" "ETL Process Flow"
          check_and_populate "src/Technical_Documentation/DB-System-Overview.md" "Database System Overview"
          check_and_populate "src/Technical_Documentation/DW-System-Overview.md" "Data Warehouse System Overview"
          
          check_and_populate "src/Technical_Documentation/database documentation/DB-ETL-Process.md" "Database ETL Process"
          check_and_populate "src/Technical_Documentation/database documentation/DB-Import-Setup-Guide.md" "Database Import Setup Guide"
          check_and_populate "src/Technical_Documentation/database documentation/DB-SQL-Server-Agent-Jobs.md" "Database SQL Server Agent Jobs"
          check_and_populate "src/Technical_Documentation/database documentation/DB-Schema.md" "Database Schema"
          check_and_populate "src/Technical_Documentation/database documentation/DB-Stored-Procedures.md" "Database Stored Procedures"
          
          check_and_populate "src/Technical_Documentation/datawarehouse documentation/DW-Dimension-Tables.md" "Data Warehouse Dimension Tables"
          check_and_populate "src/Technical_Documentation/datawarehouse documentation/DW-Fact-Tables.md" "Data Warehouse Fact Tables"
          check_and_populate "src/Technical_Documentation/datawarehouse documentation/DW-Schema.md" "Data Warehouse Schema"
          check_and_populate "src/Technical_Documentation/datawarehouse documentation/DW-Stored-Procedures.md" "Data Warehouse Stored Procedures"
          
          check_and_populate "src/Technical_Documentation/knime documentation/KNIME workflows.md" "KNIME Workflows"
          check_and_populate "src/Technical_Documentation/Github-Actions-workflows.md" "GitHub Actions Workflows"
          
          # List all files in src directory
          echo "Final src directory structure:"
          find src -type f | sort
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      
      - name: Build with mdBook
        run: mdbook build
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./book
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
